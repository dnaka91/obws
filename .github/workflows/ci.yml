name: CI
on: [pull_request, push]
env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-C debuginfo=0 -D warnings"
jobs:
  check:
    name: Feature check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Configure cache
        uses: Swatinem/rust-cache@v1
      - name: Install cargo-hack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-hack
      - name: Check feature combinations
        uses: actions-rs/cargo@v1
        with:
          command: hack
          args: clippy --feature-powerset --no-dev-deps
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Configure cache
        uses: Swatinem/rust-cache@v1
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Rust (nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Setup Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Configure cache
        uses: Swatinem/rust-cache@v1
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings
  cargo-deny:
    name: Cargo Deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check ${{ matrix.checks }}
        uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}
