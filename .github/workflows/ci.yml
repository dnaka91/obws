name: CI
on: [pull_request, push]
env:
  RUSTFLAGS: "-C debuginfo=0 -D warnings"
jobs:
  check:
    name: Feature check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Configure cache
        uses: Swatinem/rust-cache@v2
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: Check feature combinations
        run: cargo hack clippy --feature-powerset --no-dev-deps
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        toolchain: [stable, "1.70"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Configure cache
        uses: Swatinem/rust-cache@v2
      - name: Test
        run: cargo test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust (nightly)
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Run rustfmt
        run: cargo fmt -- --check
      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Configure cache
        uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
  cargo-deny:
    name: Cargo Deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check ${{ matrix.checks }}
        uses: EmbarkStudios/cargo-deny-action@v2
        with:
          command: check ${{ matrix.checks }}
